version: '3.8'
#
#networks:
#  krimson:
#    name: krimson
#    driver: bridge

services:
#  datadog-agent:
#    image: datadog/agent:latest
#    hostname: datadog-agent
#    container_name: datadog-agent
#    ports:
#      - '8125:8125/udp'
#      - '8126:8126/tcp'
#      - '5555:5555'
#    environment:
#      DD_API_KEY: ''
#      DD_SITE: 'datadoghq.eu'
#      DOCKER_CONTENT_TRUST: 1
#      DD_DOGSTATSD_NON_LOCAL_TRAFFIC: 'true'
#      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: 'true'
#      DD_LOGS_ENABLED: 'true'
#      DD_HEALTH_PORT: '5555'
#      DD_APM_ENABLED: 'true'
#      DD_TAGS: env:development
#      DD_DOCKER_ENV_AS_TAGS:
#      DD_PROCESS_AGENT_ENABLED: 'true'
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - /proc/:/host/proc/:ro
#      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
#      - /etc/passwd:/etc/passwd:ro      
        
  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.1
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
#    restart:
#      unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.1.1
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
      - '9092:9092'
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
#    restart:
#      unless-stopped
    
  schema-registry:
    image: confluentinc/cp-schema-registry:7.1.1  
    container_name: schema-registry
    hostname: schema-registry
    depends_on:
      - kafka
    ports:
      - '8081:8081'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
#    restart:
#      unless-stopped

#  akhq:
#    image: tchiotludo/akhq
#    environment:
#      AKHQ_CONFIGURATION: |
#        akhq:
#          connections:
#            docker-kafka-server:
#              properties:
#                bootstrap.servers: "kafka:9092"
#              schema-registry:
#                url: "http://schema-registry:8085"
#              connect:
#                - name: "connect"
#                  url: "http://connect:8083"
#
#    ports:
#      - '8080:8080'